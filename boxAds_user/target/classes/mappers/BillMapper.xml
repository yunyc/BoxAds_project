<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.boxads.deal.mapper.BillMapper">
	
	<sql id="where">
		<if test="writer != null and writer != 0">
			AND m_idx = #{writer}
		</if>
		<if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
			AND DATE(insert_date) between #{startDate} AND #{endDate} 
		</if>
		<if test="state != null and state != ''">
			AND state = #{state}
		</if>
	</sql>
	
	<select id="selectBill" parameterType="memberVo" resultType="BillVO">
		SELECT 
		    M.idx AS m_idx,
		    B.idx AS idx,
		    M.name,
		    company_number,
		    CONCAT(sector, ' / ', business) AS business,
		    company_name,
		    CONCAT(address, ' ', detail) AS address,
		    IFNULL(B.phone, M.phone) AS phone,
		    IFNULL(B.email, M.id) AS email,
		    B.type
		FROM
		    member M
		        LEFT JOIN
		    bill_info B ON B.m_idx = M.idx
		WHERE M.idx = #{mIdx}
	</select>
	
	<insert id="insertBill" parameterType="BillVO" useGeneratedKeys="true" keyProperty="idx">
		INSERT INTO bill_info (idx, m_idx, email, phone, type)
		VALUES (IF(#{idx} != 0, #{idx}, NULL), #{mIdx}, #{email}, #{phone}, #{type})
		ON DUPLICATE KEY UPDATE email = VALUES(email), phone = VALUES(phone), type = VALUES(type)
	</insert>
	
	<select id="selectBillIssue" parameterType="hashMap" resultType="hashMap">
		SELECT 
		    idx,
		    CASE
		        WHEN `subject` = 'M' THEN '캐시출금'
		        WHEN `subject` = 'A' THEN '캐시충전'
		    END AS `subject`,
		    m_idx,
		    parent,
		    CASE
		        WHEN state = 'Y' THEN '발행완료'
		        WHEN state = 'N' THEN '발행요청'
		        WHEN state = 'R' THEN '수정발행'
		    END AS state,
		    CASE
		        WHEN `type` = 'N' THEN '세금계산서'
		        WHEN `type` = 'S' THEN '계산서'
		        WHEN `type` = 'F' THEN '현금영수증'
		    END AS type,
		    amount,
		    fee,
		    amount + fee AS total,
		    DATE_FORMAT(insert_date, '%Y-%m-%d') AS insertDate,
		    IFNULL(DATE_FORMAT(update_date, '%Y-%m-%d'), '-') AS updateDate
		FROM
		    bill_issue
		<where>
			<include refid="where"/>
		</where>
		ORDER BY insert_date DESC
		LIMIT #{start}, #{end}
	</select>	
	
	<select id="selectBillIssueCnt" resultType="int" parameterType="hashMap">
		SELECT 
		    COUNT(idx)
		FROM
		    bill_issue
		<where>
			<include refid="where"/>
		</where>
	</select>
	
	<select id="selectBillName" parameterType="int" resultType="string">
		SELECT 
		    CASE
		        WHEN type = 'N' THEN '세금 계산서'
		        WHEN type = 'S' THEN '영수증'
		        WHEN type = 'F' THEN '계산서'
		    END AS billName
		FROM
		    bill_info
		WHERE
		    m_idx = #{value}
	</select>
	
</mapper>

